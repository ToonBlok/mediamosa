<?php

function mediamosa_messenger_cron()
{
  $server_type = variable_get('mediamosa_server_type');
  if ($server_type == 'refresh') {
    mediamosa_debug::log('Refresh triggered', array(), 'T - MISC');
    call('/jobscheduler/roundupjobs?server_action=roundupjobs');
  } else {
    mediamosa_debug::log('Cron triggered', array(), 'T - MISC');
    call_scheduler();
    call_jobcores();
  }
}

function call_scheduler(){
  mediamosa_debug::log('call_scheduler triggered', array(), 'T - MISC');
  $query_data = [
    'server_type' => 'scheduler'
  ];
  $location = '/scheduler_guardian/check?' . http_build_query($query_data);
  mediamosa_debug::log('query: ' . $location, array(), 'T - MISC');
  call($location);
}

function call_jobcores(){
  mediamosa_debug::log('call_jobcores triggered', array(), 'T - MISC');
  $installation_id = variable_get('mediamosa_installation_id');
  $core_types = variable_get('mediamosa_cores_tools');

  mediamosa_debug::log_export($core_types, WATCHDOG_NOTICE, 'T - MISC');
  $query_data = [
    'server_type' => 'jobcore'
  ];

  for ($i = 0; $i < count($core_types); $i++) {
    $core_type = $core_types[$i][0]; // HAS TO BE 0 for now because for now only 1 task

    mediamosa_debug::log('$core_type: ' . $core_type, array(), 'T - MISC');

    $query_data['core_type'] = $core_type;
    $query_data['keepalive_queue_name'] = $installation_id . '_' . $i;
    $location = '/scheduler_guardian/check?' . http_build_query($query_data);

//    mediamosa_debug::log('query: ' . $location, array(), 'T - MISC');

    call($location);
  }
}

function call($location) {
  $mediamosa_jobscheduler_uri = variable_get('mediamosa_jobscheduler_uri', NULL);
  if (isset($mediamosa_jobscheduler_uri)) {

    $url = mediamosa_http::uri2url($mediamosa_jobscheduler_uri) . $location;

    mediamosa_job_scheduler::log_debug('Triggering job scheduler @ @uri', array('@uri' => $url));

    // Dont trigger in sandbox.
    if (mediamosa::in_simpletest_sandbox()) {
      // So we wait till finished.
      MediaMosaTestCase::staticInternalRestCallGet($url);
    } else {
      // Trigger.
      mediamosa_http::do_head_internal_call($url);
    }
  } else {
    mediamosa_job_scheduler::log('Jobscheduler URL not set, please setup jobscheduler server in the @link.', array('@link' => l(t('MediaMosa configuration'), 'admin/mediamosa/config/global')), WATCHDOG_ALERT, 'job_cron');
  }

}

/**
 * Implements hook_mediamosa_register_rest_call().
 */
function mediamosa_messenger_mediamosa_register_rest_call()
{
  $rest_calls = array();

  $rest_calls['jobcore/parsequeue'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'jobcore',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_messenger',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_3_6_0,
    mediamosa_rest_call::BEHAVE_AS_EXTERNAL => TRUE,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_FOR_EXTERNAL,
  );

  $rest_calls['jobscheduler/roundupjobs'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'scheduler',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_messenger',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_3_6_0,
    mediamosa_rest_call::BEHAVE_AS_EXTERNAL => TRUE,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_FOR_EXTERNAL,
  );

  $rest_calls['scheduler_guardian/check'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'scheduler_guardian',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_messenger',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_3_6_0,
    mediamosa_rest_call::BEHAVE_AS_EXTERNAL => TRUE,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_FOR_EXTERNAL,
  );

  return $rest_calls;
}

//class foo {
//  public static function is_jobcore($server_type) {
//    return ($server_type == 'jobcore') ? 1 : 0;
//  }
//}
