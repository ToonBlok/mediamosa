<?php

function mediamosa_messenger_cron()
{
  mediamosa_debug::log('Start ' . __METHOD__, array(), 'T - Messenger');

  $start_cores = 1;

  if ($start_cores) {
    call('/jobcore/parsequeue?core_type=', 'ANALYSE');
    call('/jobcore/parsequeue?core_type=', 'STILL');
    call('/jobcore/parsequeue?core_type=', 'TRANSCODE');
  }

  // Round up jobs
  call('/jobscheduler/roundupjobs?server_action=', 'roundupjobs');
  // Check if scheduler is listening. If yes, leave alone. If no, make scheduler listen.
  call('/scheduler_guardian/check');
  call('/scheduler_guardian/check');

//  call('/jobscheduler/roundupjobs?server_action=', 'listen');


}

function call($path, $value = '') {
  // Test REST CALL
  $mediamosa_jobscheduler_uri = variable_get('mediamosa_jobscheduler_uri', NULL);
  if (isset($mediamosa_jobscheduler_uri)) {

    $url = mediamosa_http::uri2url($mediamosa_jobscheduler_uri) . $path . $value;

    // Log it.
    mediamosa_job_scheduler::log_debug('Triggering job scheduler @ @uri', array('@uri' => $url));

    // Dont trigger in sandbox.
    if (mediamosa::in_simpletest_sandbox()) {
      // So we wait till finished.
      MediaMosaTestCase::staticInternalRestCallGet($url);
    } else {
      // Trigger.
      mediamosa_http::do_head_internal_call($url);
    }
  } else {
    mediamosa_job_scheduler::log('Jobscheduler URL not set, please setup jobscheduler server in the @link.', array('@link' => l(t('MediaMosa configuration'), 'admin/mediamosa/config/global')), WATCHDOG_ALERT, 'job_cron');
  }

}

/**
 * Implements hook_mediamosa_register_rest_call().
 */
function mediamosa_messenger_mediamosa_register_rest_call()
{
  $rest_calls = array();

  $rest_calls['jobcore/parsequeue'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'jobcore',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_messenger',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_3_6_0,
    mediamosa_rest_call::BEHAVE_AS_EXTERNAL => TRUE,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_FOR_EXTERNAL,
  );

  $rest_calls['jobscheduler/roundupjobs'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'scheduler',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_messenger',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_3_6_0,
    mediamosa_rest_call::BEHAVE_AS_EXTERNAL => TRUE,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_FOR_EXTERNAL,
  );

  $rest_calls['scheduler_guardian/check'][mediamosa_rest_call::METHOD_GET] = array(
    mediamosa_rest_call::CLASS_NAME => 'scheduler_guardian',
    mediamosa_rest_call::STATUS => mediamosa_rest_call::STATUS_ACTIVE,
    mediamosa_rest_call::MODULE_NAME => 'mediamosa_messenger',
    mediamosa_rest_call::VERSION => mediamosa_version::MEDIAMOSA_VERSION_3_6_0,
    mediamosa_rest_call::BEHAVE_AS_EXTERNAL => TRUE,
    mediamosa_rest_call::ACCESS => mediamosa_rest_call::ACCESS_FOR_EXTERNAL,
  );

  return $rest_calls;
}

